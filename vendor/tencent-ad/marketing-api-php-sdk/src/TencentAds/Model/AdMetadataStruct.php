<?php
/**
 * AdMetadataStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * AdMetadataStruct Class Doc Comment
 *
 * @category Class
 * @description 广告元数据
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdMetadataStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ad_metadata_struct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'productInfos' => '\TencentAds\Model\ProductInfoStruct[]',
        'siteSets' => 'string[]',
        'automaticSiteEnabled' => 'bool',
        'promotedObjectType' => '\TencentAds\Model\PromotedObjectType',
        'bidMode' => '\TencentAds\Model\BidMode'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'productInfos' => null,
        'siteSets' => null,
        'automaticSiteEnabled' => null,
        'promotedObjectType' => null,
        'bidMode' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'productInfos' => 'product_infos',
        'siteSets' => 'site_sets',
        'automaticSiteEnabled' => 'automatic_site_enabled',
        'promotedObjectType' => 'promoted_object_type',
        'bidMode' => 'bid_mode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'productInfos' => 'setProductInfos',
        'siteSets' => 'setSiteSets',
        'automaticSiteEnabled' => 'setAutomaticSiteEnabled',
        'promotedObjectType' => 'setPromotedObjectType',
        'bidMode' => 'setBidMode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'productInfos' => 'getProductInfos',
        'siteSets' => 'getSiteSets',
        'automaticSiteEnabled' => 'getAutomaticSiteEnabled',
        'promotedObjectType' => 'getPromotedObjectType',
        'bidMode' => 'getBidMode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['productInfos'] = isset($data['productInfos']) ? $data['productInfos'] : null;
        $this->container['siteSets'] = isset($data['siteSets']) ? $data['siteSets'] : null;
        $this->container['automaticSiteEnabled'] = isset($data['automaticSiteEnabled']) ? $data['automaticSiteEnabled'] : null;
        $this->container['promotedObjectType'] = isset($data['promotedObjectType']) ? $data['promotedObjectType'] : null;
        $this->container['bidMode'] = isset($data['bidMode']) ? $data['bidMode'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets productInfos
     *
     * @return \TencentAds\Model\ProductInfoStruct[]|mixed
     */
    public function getProductInfos()
    {
        return $this->container['productInfos'];
    }

    /**
     * Sets productInfos
     *
     * @param \TencentAds\Model\ProductInfoStruct[]|mixed $productInfos productInfos
     *
     * @return $this
     */
    public function setProductInfos($productInfos)
    {
        $this->container['productInfos'] = $productInfos;

        return $this;
    }

    /**
     * Gets siteSets
     *
     * @return string[]|mixed
     */
    public function getSiteSets()
    {
        return $this->container['siteSets'];
    }

    /**
     * Sets siteSets
     *
     * @param string[]|mixed $siteSets siteSets
     *
     * @return $this
     */
    public function setSiteSets($siteSets)
    {
        $this->container['siteSets'] = $siteSets;

        return $this;
    }

    /**
     * Gets automaticSiteEnabled
     *
     * @return bool|mixed
     */
    public function getAutomaticSiteEnabled()
    {
        return $this->container['automaticSiteEnabled'];
    }

    /**
     * Sets automaticSiteEnabled
     *
     * @param bool|mixed $automaticSiteEnabled automaticSiteEnabled
     *
     * @return $this
     */
    public function setAutomaticSiteEnabled($automaticSiteEnabled)
    {
        $this->container['automaticSiteEnabled'] = $automaticSiteEnabled;

        return $this;
    }

    /**
     * Gets promotedObjectType
     *
     * @return \TencentAds\Model\PromotedObjectType|mixed
     */
    public function getPromotedObjectType()
    {
        return $this->container['promotedObjectType'];
    }

    /**
     * Sets promotedObjectType
     *
     * @param \TencentAds\Model\PromotedObjectType|mixed $promotedObjectType promotedObjectType
     *
     * @return $this
     */
    public function setPromotedObjectType($promotedObjectType)
    {
        $this->container['promotedObjectType'] = $promotedObjectType;

        return $this;
    }

    /**
     * Gets bidMode
     *
     * @return \TencentAds\Model\BidMode|mixed
     */
    public function getBidMode()
    {
        return $this->container['bidMode'];
    }

    /**
     * Sets bidMode
     *
     * @param \TencentAds\Model\BidMode|mixed $bidMode bidMode
     *
     * @return $this
     */
    public function setBidMode($bidMode)
    {
        $this->container['bidMode'] = $bidMode;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


